// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service;

#nullable disable

namespace DreamyGadget.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SBD_ST_PS10_4")
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Category", b =>
                {
                    b.Property<decimal>("Categoryid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CATEGORYID");

                    b.Property<string>("Categoryname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CATEGORYNAME");

                    b.Property<decimal?>("Parentcategoryid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PARENTCATEGORYID");

                    b.HasKey("Categoryid")
                        .HasName("SYS_C00523912");

                    b.HasIndex("Parentcategoryid");

                    b.ToTable("CATEGORIES", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Currency", b =>
                {
                    b.Property<string>("Currencycode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CURRENCYCODE");

                    b.Property<decimal?>("Exchangerate")
                        .HasColumnType("DECIMAL(10,4)")
                        .HasColumnName("EXCHANGERATE");

                    b.HasKey("Currencycode")
                        .HasName("SYS_C00523911");

                    b.ToTable("CURRENCIES", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.Property<decimal>("Orderid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ORDERID");

                    b.Property<DateTime?>("Orderdate")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("ORDERDATE")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Orderstatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ORDERSTATUS");

                    b.Property<decimal?>("Userid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("USERID");

                    b.HasKey("Orderid")
                        .HasName("SYS_C00523917");

                    b.HasIndex("Userid");

                    b.ToTable("ORDERS", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Orderitem", b =>
                {
                    b.Property<decimal>("Orderitemid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ORDERITEMID");

                    b.Property<decimal?>("Itemprice")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("ITEMPRICE");

                    b.Property<decimal?>("Orderid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ORDERID");

                    b.Property<decimal?>("Productid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRODUCTID");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("QUANTITY");

                    b.HasKey("Orderitemid")
                        .HasName("SYS_C00523919");

                    b.HasIndex("Orderid");

                    b.HasIndex("Productid");

                    b.ToTable("ORDERITEMS", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Payment", b =>
                {
                    b.Property<decimal>("Paymentid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PAYMENTID");

                    b.Property<decimal?>("Orderid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ORDERID");

                    b.Property<string>("Paymentmethod")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PAYMENTMETHOD");

                    b.Property<string>("Paymentstatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PAYMENTSTATUS");

                    b.HasKey("Paymentid")
                        .HasName("SYS_C00523922");

                    b.HasIndex("Orderid");

                    b.ToTable("PAYMENTS", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.Property<decimal>("Productid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRODUCTID");

                    b.Property<decimal?>("Categoryid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CATEGORYID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<bool?>("Hidden")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("HIDDEN");

                    b.Property<decimal?>("Price")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("PRICE");

                    b.Property<string>("Productname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PRODUCTNAME");

                    b.Property<decimal?>("Stockquantity")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("STOCKQUANTITY");

                    b.Property<decimal?>("Vatrate")
                        .HasColumnType("DECIMAL(4,2)")
                        .HasColumnName("VATRATE");

                    b.HasKey("Productid")
                        .HasName("SYS_C00523916");

                    b.HasIndex("Categoryid");

                    b.ToTable("PRODUCTS", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Productfile", b =>
                {
                    b.Property<decimal>("Fileid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("FILEID");

                    b.Property<string>("Filedescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FILEDESCRIPTION");

                    b.Property<string>("Filepath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FILEPATH");

                    b.Property<decimal?>("Productid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRODUCTID");

                    b.HasKey("Fileid")
                        .HasName("SYS_C00523926");

                    b.HasIndex("Productid");

                    b.ToTable("PRODUCTFILES", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Productimage", b =>
                {
                    b.Property<decimal>("Imageid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("IMAGEID");

                    b.Property<string>("Imagepath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IMAGEPATH");

                    b.Property<bool?>("Isthumbnail")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("ISTHUMBNAIL");

                    b.Property<decimal?>("Productid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRODUCTID");

                    b.HasKey("Imageid")
                        .HasName("SYS_C00523924");

                    b.HasIndex("Productid");

                    b.ToTable("PRODUCTIMAGES", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Promotion", b =>
                {
                    b.Property<decimal>("Promotionid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PROMOTIONID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal?>("Discountpercentage")
                        .HasColumnType("DECIMAL(5,2)")
                        .HasColumnName("DISCOUNTPERCENTAGE");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("DATE")
                        .HasColumnName("ENDDATE");

                    b.Property<string>("Promotionname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PROMOTIONNAME");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("DATE")
                        .HasColumnName("STARTDATE");

                    b.HasKey("Promotionid")
                        .HasName("SYS_C00523928");

                    b.ToTable("PROMOTIONS", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Review", b =>
                {
                    b.Property<decimal>("Reviewid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("REVIEWID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal?>("Productid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRODUCTID");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RATING");

                    b.Property<decimal?>("Userid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("USERID");

                    b.HasKey("Reviewid")
                        .HasName("SYS_C00523932");

                    b.HasIndex("Productid");

                    b.HasIndex("Userid");

                    b.ToTable("REVIEWS", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Shippingmethod", b =>
                {
                    b.Property<decimal>("Shippingmethodid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SHIPPINGMETHODID");

                    b.Property<string>("Methodname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("METHODNAME");

                    b.Property<decimal?>("Shippingcost")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("SHIPPINGCOST");

                    b.HasKey("Shippingmethodid")
                        .HasName("SYS_C00523914");

                    b.ToTable("SHIPPINGMETHODS", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<decimal>("Userid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("USERID");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMAIL");

                    b.Property<bool?>("Newslettersubscription")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("NEWSLETTERSUBSCRIPTION");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Shippingaddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SHIPPINGADDRESS");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Userid")
                        .HasName("SYS_C00523915");

                    b.ToTable("USERS", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Productpromotion", b =>
                {
                    b.Property<decimal>("Productid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRODUCTID");

                    b.Property<decimal>("Promotionid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PROMOTIONID");

                    b.HasKey("Productid", "Promotionid")
                        .HasName("SYS_C00523929");

                    b.HasIndex("Promotionid");

                    b.ToTable("PRODUCTPROMOTIONS", "SBD_ST_PS10_4");
                });

            modelBuilder.Entity("Models.Category", b =>
                {
                    b.HasOne("Models.Category", "Parentcategory")
                        .WithMany("InverseParentcategory")
                        .HasForeignKey("Parentcategoryid")
                        .HasConstraintName("SYS_C00523913");

                    b.Navigation("Parentcategory");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.HasOne("Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("Userid")
                        .HasConstraintName("FK_USER_ORDERS");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Orderitem", b =>
                {
                    b.HasOne("Models.Order", "Order")
                        .WithMany("Orderitems")
                        .HasForeignKey("Orderid")
                        .HasConstraintName("FK_ORDER_ITEMS_ORDERS");

                    b.HasOne("Models.Product", "Product")
                        .WithMany("Orderitems")
                        .HasForeignKey("Productid")
                        .HasConstraintName("FK_ORDER_ITEMS_PRODUCTS");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Models.Payment", b =>
                {
                    b.HasOne("Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("Orderid")
                        .HasConstraintName("FK_PAYMENTS_ORDERS");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.HasOne("Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Categoryid")
                        .HasConstraintName("PRODUCTS_FK1");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Models.Productfile", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany("Productfiles")
                        .HasForeignKey("Productid")
                        .HasConstraintName("FK_PRODUCT_FILES_PRODUCTS");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Models.Productimage", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany("Productimages")
                        .HasForeignKey("Productid")
                        .HasConstraintName("FK_PRODUCT_IMAGES_PRODUCTS");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Models.Review", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("Productid")
                        .HasConstraintName("SYS_C00523934");

                    b.HasOne("Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("Userid")
                        .HasConstraintName("SYS_C00523933");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Productpromotion", b =>
                {
                    b.HasOne("Models.Product", null)
                        .WithMany()
                        .HasForeignKey("Productid")
                        .IsRequired()
                        .HasConstraintName("SYS_C00523930");

                    b.HasOne("Models.Promotion", null)
                        .WithMany()
                        .HasForeignKey("Promotionid")
                        .IsRequired()
                        .HasConstraintName("SYS_C00523931");
                });

            modelBuilder.Entity("Models.Category", b =>
                {
                    b.Navigation("InverseParentcategory");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.Navigation("Orderitems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.Navigation("Orderitems");

                    b.Navigation("Productfiles");

                    b.Navigation("Productimages");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
